def get_info(moodle_username, moodle_role, lti_param):
    """大学での教師/学生を判別する処理

        Args:
            moodle_username(String): Moodleでのユーザ名 ex.'admin'
            moodle_role(String): Moodleでのrole ex.'Instructor'
            lti_param(dict): LTI認証連携でLMSから渡されるパラメータ一式

        Returns:
            uidNumber（Number）: ユーザID（数値のみ）
            role（String）: 'Instructor'または'Learner'
    """
    # 初期値
    uidNumber = 1000
    role = moodle_role

    from ldap3 import Server, Connection, ALL
    from ldap3.core.exceptions import LDAPNoSuchObjectResult
    import sys
    global_ldap_server = '172.30.2.120:1389'
    global_ldap_base_dn = 'ou=People,dc=ldap,dc=server,dc=sample,dc=jp'
    global_ldap_password = 'PassWordDesu'
    univserver = Server(global_ldap_server, get_info=ALL)

    if len(global_ldap_password) >= 5:
        univconn = Connection(univserver, password=global_ldap_password, raise_exceptions=True)
    else:
        univconn = Connection(univserver, raise_exceptions=True)

    try:
        conn_result = univconn.bind()
    except Exception as e:
        sys.stderr.write("Cannot connect to ldap server in university.\n")
        univconn.unbind()
        raise

    try:
        search_result = univconn.search(
            f'uid={moodle_username},{global_ldap_base_dn}',
            '(objectclass=*)',
            attributes=['uidNumber','gidNumber','homeDirectory'])

        # get properties for user.
        uidNumber = univconn.entries[0]['uidNumber'].value
        gidNumber = univconn.entries[0]['gidNumber'].value
        homeDirectory = univconn.entries[0]['homeDirectory'].value
 
    except LDAPNoSuchObjectResult:
        sys.stderr.write(f"Error: User {moodle_username} does not exist in university ldap.\n")
        return
    finally:
        univconn.unbind()

    if gidNumber == uidNumber and not homeDirectory.startswith('/st'):
        role = 'Instructor'
    else:
        role = 'Learner'

    return uidNumber, role
