# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

services:
  db:
    image: docker.io/bitnami/mariadb:11.4
    environment:
      - MARIADB_USER=${MARIADB_USER?Variable not set}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD?Variable not set}
      # - MARIADB_DATABASE=${MARIADB_DATABASE?Variable not set}
      - MARIADB_CHARACTER_SET=utf8mb4
      - MARIADB_COLLATE=utf8mb4_unicode_ci
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD?Variable not set}
      - MARIADB_DATABASE_MOODLE=${MARIADB_DATABASE_MOODLE:-moodle}
      - MARIADB_DATABASE_JUPYTERHUB=${MARIADB_DATABASE_JUPYTERHUB:-jupyterhub}
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - 'db_data:/bitnami/db'
    networks:
      - default
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
  moodle:
    build:
      context: moodle
      dockerfile: Dockerfile
      args:
        - EXTRA_LOCALES=ja_JP.UTF-8 UTF-8
    environment:
      - MOODLE_SITE_NAME="Quickstart for dev"
      - MOODLE_DATABASE_TYPE=mariadb
      - MOODLE_DATABASE_HOST=db
      - MOODLE_DATABASE_PORT_NUMBER=${MARIADB_PORT:-3306}
      - MOODLE_DATABASE_USER=${MARIADB_USER?Variable not set}
      - MOODLE_DATABASE_NAME=${MARIADB_DATABASE_MOODLE:-moodle_db}
      - MOODLE_DATABASE_PASSWORD=${MARIADB_PASSWORD?Variable not set}
      - MOODLE_HOST=${MOODLE_HOST:-localhost/moodle}
      - MOODLE_REVERSEPROXY=true
      - MOODLE_SSLPROXY=true
      - MOODLE_USERNAME=${MOODLE_USERNAME:-admin}
      - MOODLE_EMAIL=${MOODLE_EMAIL:-admin@example.com}
      - MOODLE_PASSWORD=${MARIADB_PASSWORD?Variable not set}
      - MOODLE_LANG=ja
      #- BITNAMI_DEBUG=true # 詳細ログ出力
    volumes:
      - 'moodle_data:/bitnami/moodle'
      - 'moodledata_data:/bitnami/moodledata'
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - default
    restart: always
  jupyterhub:
    build:
      context: ./jupyterhub/jupyterhub/image
      # dockerfile: ./jupyterhub/jupyterhub/image/Dockerfile
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./jupyterhub/jupyterhub:/etc/jupyterhub
      - ./mcj-data:${DATA_ROOT:-/jupyterdata}
    networks:
      - default
      - jupyterhub_public
    environment:
      DOCKER_NETWORK_NAME: jupyterhub_public
      JUPYTERHUB_FQDN: localhost
      DB_USER: ${MARIADB_USER?Variable not set}
      DB_PASSWORD: ${MARIADB_PASSWORD?Variable not set}
      DB_NAME: ${MARIADB_DATABASE_JUPYTERHUB?Variable not set}
      DB_HOST: db:${MARIADB_PORT:-3306}
      LDAP_ADMIN: ${LDAP_ADMIN?Variable not set}
      LDAP_PASSWORD: ${LDAP_ADMIN_PASSWORD?Variable not set}
      EMAIL_DOMAIN: ${EMAIL_DOMAIN?Variable not set}
      # JUPYTERHUB_ADMIN_USERS: "{{jupyterhub_admin_users}}"
      CONFIGPROXY_AUTH_TOKEN: ${CONFIGPROXY_AUTH_TOKEN?Variable not set}
      TEACHER_GID: ${TEACHER_GID:-600}
      STUDENT_GID: ${STUDENT_GID:-601}
      NB_NODE_ROLE: manager # Ignored because this is not swarm
      # LTI_METHOD: {{get_course_member_method}}
      # LMS_API_TOKEN: {{lms_api_token}}
      TEMPLATE_DIR_HOST: "/home/user01/dev/mcj-cloudhub/template/jupyterhub"
      HOME_DIR_ROOT_HOST: "/home/user01/dev/mcj-cloudhub/template/mcj-data/jupyter"
      SHARE_DIR_ROOT_HOST: "/home/user01/dev/mcj-cloudhub/template/mcj-data/exchange"
      NOTEBOOK_IMAGE: "mcj-cloudhub-nb:notebook-6.5.4"
      LMS_PLATFORM_ID: ${LMS_PLATFORM_ID:-http://localhost}
      LMS_CLIENT_ID: ${LMS_CLIENT_ID:-issuedbylms}
      LTI_USERNAME_KEY: "sub"
      DEFAULT_URL: "tree"
      ENABLE_CUSTOM_SETUP: "yes"
      DATA_ROOT: ${DATA_ROOT:-/jupyterdata}
      LMS_URL: ${LMS_URL}
      LMS_SUBDIR: ${LMS_SUBDIR}
    command: ["jupyterhub", "-f", "/etc/jupyterhub/jupyterhub_config.py"]
    depends_on:
      db:
        condition: service_healthy
        restart: true
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
  jupyterhub-proxy:
    image: jupyterhub/configurable-http-proxy
    networks:
      - default
      - jupyterhub_public
    # ports:
    #   - "8000:8000"
    #   - "8001:8001"
    environment:
      CONFIGPROXY_AUTH_TOKEN: ${CONFIGPROXY_AUTH_TOKEN?Variable not set}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  proxy:
    image: nginx
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./jupyterhub/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./jupyterhub/nginx/certs:/etc/nginx/certs:ro
      # - {{certs_dir}}/privkey.pem:/etc/nginx/certs/privkey.pem
    networks:
      - default
      - jupyterhub_public
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  ldap:
    image: bitnami/openldap:2.5.14
    environment:
      - LDAP_SKIP_DEFAULT_TREE=yes
      #- LDAP_ALLOW_ANON_BINDING=no
      - LDAP_ROOT=dc=jupyterhub,dc=server,dc=sample,dc=jp
      - LDAP_ADMIN_USERNAME=${LDAP_ADMIN?Variable not set}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD?Variable not set}
    networks:
      - default
      - jupyterhub_public
    volumes:
      - ./jupyterhub/ldap/ldifs:/ldifs:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  # prestart:
  #   image: nginx
  #   networks:
  #     - default
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #       restart: true
  #   command: bash scripts/prestart.sh
volumes:
  db_data:
    driver: local
  moodle_data:
    driver: local
  moodledata_data:
    driver: local
  jupyterhub_share:
    driver: local
networks:
  jupyterhub_public:
    driver: overlay
    name: jupyterhub_public
    external: true